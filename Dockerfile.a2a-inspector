# syntax=docker/dockerfile:1.4

#############################
# üì• Clone
#############################
FROM alpine:latest AS repo-clone
RUN apk add --no-cache git
RUN git clone https://github.com/a2aproject/a2a-inspector.git /app

#############################
# üé® Frontend build
#############################
FROM node:18-alpine AS frontend-builder
WORKDIR /app
COPY --from=repo-clone /app/frontend/ ./
RUN npm ci && npm run build

#############################
# üêç Backend build
#############################
FROM python:3.12-slim AS backend-builder
WORKDIR /app
RUN apt-get update && apt-get install -y --no-install-recommends \
      curl git build-essential python3-venv \
    && rm -rf /var/lib/apt/lists/*

RUN python -m venv /app/.venv
RUN /app/.venv/bin/python -m ensurepip -U
RUN /app/.venv/bin/python -m pip install -U pip wheel setuptools

RUN curl -LsSf https://astral.sh/uv/install.sh | sh
ENV UV_LINK_MODE=copy
ENV PATH="/root/.local/bin:${PATH}"
ENV UV_PYTHON=/usr/local/bin/python3
ENV UV_PROJECT_ENVIRONMENT=/app/.venv

COPY --from=repo-clone /app/pyproject.toml ./pyproject.toml
COPY --from=repo-clone /app/backend/ ./backend/

RUN uv lock --python "$UV_PYTHON" && uv sync --python "$UV_PYTHON"
RUN /app/.venv/bin/pip install --no-cache-dir fastapi uvicorn

#############################
# üöÄ Runtime
#############################
FROM python:3.12-slim
WORKDIR /app

COPY --from=backend-builder /app/.venv /app/.venv
COPY --from=repo-clone /app/backend/ ./backend/
COPY --from=repo-clone /app/pyproject.toml ./pyproject.toml
COPY --from=backend-builder /root/.local/bin/uv /usr/local/bin/uv
COPY --from=backend-builder /root/.local/bin/uvx /usr/local/bin/uvx

RUN mkdir -p /app/frontend
COPY --from=frontend-builder /app/public /app/frontend/public

ENV PATH="/app/.venv/bin:$PATH"
ENV UV_PROJECT_ENVIRONMENT=/app/.venv

WORKDIR /app/backend
EXPOSE 8080
CMD ["uv","run","--","uvicorn","app:app","--host","0.0.0.0","--port","8080"]
